<xs:schema xmlns="https://github.com/Region-Skane-SDI/diml/dataproduct" targetNamespace="https://github.com/Region-Skane-SDI/diml/dataproduct" xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified">
  <xs:element name="dataProduct" type="Data.DataProductSpecification" />
  <xs:complexType name="Data.DataProductSpecification">
    <xs:annotation>
      <xs:documentation>Beskrivning av en dataprodukt med dess specifikationer.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="dataFlow" type="Data.DataFlow" minOccurs="0" maxOccurs="1" />
      <xs:element name="dataInputs" type="Data.DataInputCollection" minOccurs="1" maxOccurs="1" />
      <xs:element name="dataOutputs" type="Data.DataProductOutputs" minOccurs="0" maxOccurs="1" />
      <xs:element name="dcat" type="Data.DCat" minOccurs="1" maxOccurs="1" />
      <xs:element name="descriptions" type="Core.Descriptions.DescriptionCollection" minOccurs="1" maxOccurs="1" />
      <xs:element name="names" type="Core.Names.NameCollection" minOccurs="1" maxOccurs="1" />
      <xs:element name="tables" type="Data.Tabular.DataProductTableCollection" minOccurs="0" maxOccurs="1" />
      <xs:element name="traits" type="Core.Traits.TraitCollection" minOccurs="0" maxOccurs="1" />
    </xs:all>
    <xs:attribute name="dimlId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>En globalt unik identifierare för Diml-objektet.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="targetPlatform" type="Core.DataTypesConfig.TargetPlatformType" use="required">
      <xs:annotation>
        <xs:documentation>Vilken plattform som ska användas.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="uniqueName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Ett globalt unikt namn för en dataspecifikation.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.DataFlow">
    <xs:annotation>
      <xs:documentation>Anger flödet av data genom alla lager, samt egenskaper t.ex om en tabell ska materialiseras, uppdateras osv.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="dataIngests" type="Data.DataIngestCollection" minOccurs="1" maxOccurs="1" />
      <xs:element name="dataStages" type="Data.DataStageCollection" minOccurs="1" maxOccurs="1" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Data.DataInputCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en list av indatakällor för en dataproduktsspecifikation, t.ex. en DataSource eller en annan DataProduct.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="dataInput" type="Data.DataInput" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Data.DataProductOutputs">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av utdataformat.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="apiOutputs" type="Data.Outputs.Api.ApiOutputCollection" minOccurs="0" maxOccurs="1" />
      <xs:element name="fileOutputs" type="Data.Outputs.File.FileOutputCollection" minOccurs="0" maxOccurs="1" />
      <xs:element name="sqlOutputs" type="Data.Outputs.Sql.SqlOutputCollection" minOccurs="0" maxOccurs="1" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Data.DCat">
    <xs:annotation>
      <xs:documentation>Innehåller egenskaper för DCAT vilket är en metadataspecifikation för att beskriva datamängder. Mer information finns här: https://docs.dataportal.se/dcat/en/</xs:documentation>
    </xs:annotation>
    <xs:attribute name="dcatAccessRights" type="Data.DCatAccessRightsType" use="required">
      <xs:annotation>
        <xs:documentation>Anger vilka åtkomsträttigheter som finns för dataprodukten i datakatalogen. Följer standarden DCAT-AP, mer information finns här: https://docs.dataportal.se/dcat/en</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dcatAvailability" type="Data.DCatAvailabilityType" use="required">
      <xs:annotation>
        <xs:documentation>Anger dataproduktens tillgänglighet i datakatalogen. Följer standarden DCAT-AP, mer information finns här: https://docs.dataportal.se/dcat/en</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dcatDataTheme" type="Data.DCatDataThemeType" use="required">
      <xs:annotation>
        <xs:documentation>Anger vilket datatema dataprodukten tillhör i datakatalogen. Följer standarden DCAT-AP, mer information finns här: https://docs.dataportal.se/dcat/en</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dcatStatus" type="Data.DCatStatusType" use="required">
      <xs:annotation>
        <xs:documentation>Anger dataproduktens status i datakatalogen. Följer standarden DCAT-AP, mer information finns här: https://docs.dataportal.se/dcat/en</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dcatUpdateFrequency" type="Data.DCatUpdateFrequencyType" use="required">
      <xs:annotation>
        <xs:documentation>Anger dataproduktens uppdateringsfrekvens i datakatalogen. Följer standarden DCAT-AP, mer information finns här: https://docs.dataportal.se/dcat/en</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Core.Descriptions.DescriptionCollection">
    <xs:annotation>
      <xs:documentation>En lista av beskrivningar för ett Diml-objekt i olika format och språk.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="description" type="Core.Descriptions.Description" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Core.Names.NameCollection">
    <xs:annotation>
      <xs:documentation>En lista av namn för att namnge ett Diml-objekt på olika språk.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="Core.Names.Name" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.DataProductTableCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av tabeller i en tabulär dataprodukt.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="table" type="Data.Tabular.DataProductTable" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="Core.DataTypesConfig.TargetPlatformType">
    <xs:annotation>
      <xs:documentation>Anger vilken plattform som ska användas.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="azdatabricks" />
      <xs:enumeration value="azsqlserver" />
      <xs:enumeration value="msfabric-lakehouse" />
      <xs:enumeration value="msfabric-warehouse" />
      <xs:enumeration value="sqlserver" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Core.Traits.TraitCollection">
    <xs:annotation>
      <xs:documentation>En lista av egenskaper på ett Diml-objekt.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="trait" type="Core.Traits.Trait" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Data.DataIngestCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av Instruktioner för hur data ska läsas in från källa till destination.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="dataIngest" type="Data.DataIngest" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Data.DataStageCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av datastages som anger de olika stadien för data och dess egenskaper, tex. Om en tabell ska materialiseras eller inte, hur data ska uppdateras osv.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="dataStage" type="Data.DataStage" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Data.DataInput">
    <xs:annotation>
      <xs:documentation>Anger en indatakälla för en dataproduktsspecifikation, t.ex. en DataSource eller en annan DataProduct.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="channelId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Anger vilken typ av data som ska hämtas och i vilket format.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dimlId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Ett globalt unikt dimlId för indatakällan.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Ett id för indatakällan. Detta måste vara unikt inom en DataProduct då det kommer att användas som ett alias.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Outputs.Api.ApiOutputCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av apiOutput som anger API som utdataformat enligt en angiven standard.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="apiOutput" type="Data.Outputs.Api.ApiOutput" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Data.Outputs.File.FileOutputCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av fildestinationer för utdata med ett antal obligatoriska parametrar.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="fileOutput" type="Data.Outputs.File.FileOutput" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Data.Outputs.Sql.SqlOutputCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av sqluOutput som anger output som SQL kod i angiven dialekt, tex: TSQL eller Spark SQL.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="sqlOutput" type="Data.Outputs.Sql.SqlOutput" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="Data.DCatAccessRightsType">
    <xs:annotation>
      <xs:documentation>Anger vilka åtkomsträttigheter som finns för dataprodukten i datakatalogen. Följer standarden DCAT-AP, mer information finns här: https://docs.dataportal.se/dcat/en</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="nonPublic" />
      <xs:enumeration value="public" />
      <xs:enumeration value="restricted" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Data.DCatAvailabilityType">
    <xs:annotation>
      <xs:documentation>Anger dataproduktens tillgänglighet i datakatalogen. Följer standarden DCAT-AP, mer information finns här: https://docs.dataportal.se/dcat/en</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="available" />
      <xs:enumeration value="experimental" />
      <xs:enumeration value="stable" />
      <xs:enumeration value="temporary" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Data.DCatDataThemeType">
    <xs:annotation>
      <xs:documentation>Anger vilket datatema dataprodukten tillhör i datakatalogen. Följer standarden DCAT-AP, mer information finns här: https://docs.dataportal.se/dcat/en</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="econ" />
      <xs:enumeration value="educ" />
      <xs:enumeration value="ener" />
      <xs:enumeration value="envi" />
      <xs:enumeration value="gove" />
      <xs:enumeration value="heal" />
      <xs:enumeration value="intr" />
      <xs:enumeration value="just" />
      <xs:enumeration value="op_datpro" />
      <xs:enumeration value="regi" />
      <xs:enumeration value="soci" />
      <xs:enumeration value="tech" />
      <xs:enumeration value="tran" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Data.DCatStatusType">
    <xs:annotation>
      <xs:documentation>Anger dataproduktens status i datakatalogen. Följer standarden DCAT-AP, mer information finns här: https://docs.dataportal.se/dcat/en</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="completed" />
      <xs:enumeration value="deprecated" />
      <xs:enumeration value="underDevelopment" />
      <xs:enumeration value="withdrawn" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Data.DCatUpdateFrequencyType">
    <xs:annotation>
      <xs:documentation>Anger dataproduktens uppdateringsfrekvens i datakatalogen. Följer standarden DCAT-AP, mer information finns här: https://docs.dataportal.se/dcat/en</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="annual" />
      <xs:enumeration value="annual2" />
      <xs:enumeration value="biennial" />
      <xs:enumeration value="bimonthly" />
      <xs:enumeration value="biweekly" />
      <xs:enumeration value="continuous" />
      <xs:enumeration value="daily" />
      <xs:enumeration value="daily2" />
      <xs:enumeration value="irregular" />
      <xs:enumeration value="monthly" />
      <xs:enumeration value="monthly2" />
      <xs:enumeration value="monthly3" />
      <xs:enumeration value="other" />
      <xs:enumeration value="quarterly" />
      <xs:enumeration value="triennial" />
      <xs:enumeration value="unknown" />
      <xs:enumeration value="update_continuously" />
      <xs:enumeration value="weekly" />
      <xs:enumeration value="weekly2" />
      <xs:enumeration value="weekly3" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Core.Descriptions.Description">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:annotation>
          <xs:documentation>Används för att beskriva ett Diml-objekt i olika format och språk.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="language" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Anger språk för beskrivning.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="type" type="Core.Descriptions.DescriptionType" use="required">
          <xs:annotation>
            <xs:documentation>Anger beskrivning i valt format, t.ex markdown eller plain text.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Core.Names.Name">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:annotation>
          <xs:documentation>Används för att namnge ett Diml-objekt på olika språk.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="language" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>En representation av vilket språk som används för namnet. Exempelvärde: sv</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.DataProductTable">
    <xs:annotation>
      <xs:documentation>Beskriver en tabell i en tabulär dataprodukt.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="businessKey" type="Data.Tabular.BusinessKeyCollection" minOccurs="0" maxOccurs="1" />
      <xs:element name="columns" type="Data.Tabular.DataProductColumnCollection" minOccurs="1" maxOccurs="1" />
      <xs:element name="descriptions" type="Core.Descriptions.DescriptionCollection" minOccurs="0" maxOccurs="1" />
      <xs:element name="names" type="Core.Names.NameCollection" minOccurs="1" maxOccurs="1" />
      <xs:element name="sampleData" type="Data.Tabular.SampleDataRowCollection" minOccurs="0" maxOccurs="1" />
      <xs:element name="tableInstances" type="Data.Tabular.TableInstanceCollection" minOccurs="0" maxOccurs="1" />
      <xs:element name="tableRelations" type="Data.Tabular.TableRelationCollection" minOccurs="0" maxOccurs="1" />
      <xs:element name="traits" type="Core.Traits.TraitCollection" minOccurs="0" maxOccurs="1" />
    </xs:all>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Tabellens id.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Core.Traits.Trait">
    <xs:annotation>
      <xs:documentation>Används för att specificera egenskaper (traits) på ett Diml-objekt.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="Core.Traits.TraitType" use="required">
      <xs:annotation>
        <xs:documentation>The type of trait.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Värdet för egenskapen.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.DataIngest">
    <xs:annotation>
      <xs:documentation>Instruktioner för hur data ska läsas in från källa till destination.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="tableToTableMappings" type="Data.Tabular.TableToTableMappingCollection" minOccurs="0" maxOccurs="1" />
    </xs:all>
    <xs:attribute name="dataInputId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Ett unikt id som respesenterar en källa.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Ett unikt id som representerar ett dataIngest-flöde.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.DataStage">
    <xs:annotation>
      <xs:documentation>Anger de olika stadien för data och dess egenskaper, tex. Om en tabell ska materialiseras eller inte, hur data ska uppdateras osv.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="ingestPolicy" type="Data.IngestPolicy" minOccurs="0" maxOccurs="1" />
      <xs:element name="logicDataStageTables" type="Data.Tabular.LogicDataStageTableCollection" minOccurs="0" maxOccurs="1" />
      <xs:element name="traits" type="Core.Traits.TraitCollection" minOccurs="0" maxOccurs="1" />
      <xs:element name="validationPolicy" type="Data.ValidationPolicy" minOccurs="0" maxOccurs="1" />
    </xs:all>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Unikt id för dataStage.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="materialization" type="Data.DataStageMaterialization" use="required">
      <xs:annotation>
        <xs:documentation>Anger om data ska materialiseras eller inte.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="order" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Anger ordningen på dataStage, dvs vilket steg som ska ske först.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="role" type="Data.DataStageRole" use="optional">
      <xs:annotation>
        <xs:documentation>Anger vad som ska hända i dataStage t.ex transformation,input,output.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="Data.DataStageType" use="required">
      <xs:annotation>
        <xs:documentation>Anger vilken typ av dataStage t.ex tempStore,permaStore,validate.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Outputs.Api.ApiOutput">
    <xs:annotation>
      <xs:documentation>Anger API som utdataformat enligt en angiven standard.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="apiOutputType" type="Data.Outputs.Api.ApiOutputType" use="required">
      <xs:annotation>
        <xs:documentation>API utdataformat</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="channelId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>API Id</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Outputs.File.FileOutput">
    <xs:annotation>
      <xs:documentation>Anger en fil som destination för utdata med ett antal obligatoriska parametrar.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="channelId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Anger ett unikt id för varje utkanaltyp t.ex sql,sql2 etc.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="columnSeparator" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger vilket/vilka tecken som ska användas som kolumnavskiljare i utdatafilen, om filformatet är csv.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="customFormatId" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger utdataformatet genom att referera till egendefinierat utdataformat i customFormats.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="encoding" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Teckenkodningen för utdatafilen, t.ex. UTF-8.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fileFormat" type="Data.Outputs.File.FileFormat" use="required">
      <xs:annotation>
        <xs:documentation>Anger filformatet av utdatafilen.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="path" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Sökvägen för utdatafilen.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="quoteCharacter" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger vilket tecken som ska användas som citationstecken i utdatafilen, om filformatet är csv.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="rowSeparator" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger vilket/vilka tecken som ska användas som radavskiljare i utdatafilen, om filformatet är csv.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="table" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger vilken källtabell som utdatafilen ska baseras på.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Outputs.Sql.SqlOutput">
    <xs:annotation>
      <xs:documentation>Anger output som SQL kod i angiven dialekt, tex: TSQL eller Spark SQL.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="channelId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Anger ett unikt id för varje utkanaltyp t.ex sql,sql2 etc.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sqlOutputType" type="Data.Outputs.Sql.SqlOutputType" use="required">
      <xs:annotation>
        <xs:documentation>Anger utdatatyper som är kompatibla med sqlOutput.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="Core.Descriptions.DescriptionType">
    <xs:annotation>
      <xs:documentation>Anger textformat för beskrivningen</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="logicMd" />
      <xs:enumeration value="md" />
      <xs:enumeration value="plain" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Data.Tabular.BusinessKeyCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av businessKey som beskriver vilken kolumn som ska användas som BusinessKey</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="value" type="Data.Tabular.BusinessKey" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.DataProductColumnCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av dataProductColumn som beskriver en kolumn i en tabulär dataprodukt.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="column" type="Data.Tabular.DataProductColumn" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.SampleDataRowCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av sampleDataRow som anger exempeldata.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="sampleDataRow" type="Data.Tabular.SampleDataRow" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.TableInstanceCollection">
    <xs:annotation>
      <xs:documentation>En samling av tabellinstanser i en tabulär dataprodukt.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="tableInstance" type="Data.Tabular.TableInstance" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="existsFromStageId" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger från och med vilket dataStage som tabellen kommer att existera i. Om inget anges gäller dataStage med order="1".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="existsToStageId" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger till och med vilket dataStage som tabellen kommer att existera i. Om inget anges gäller dataStage med order="X", där X = högsta order.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.TableRelationCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av tableRelation som anger eventuella tabellrelationer och hur de relaterar via relationsColumns.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="tableRelation" type="Data.Tabular.TableRelation" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="Core.Traits.TraitType">
    <xs:annotation>
      <xs:documentation>The type of trait.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="appearance.icon" />
      <xs:enumeration value="classification.infoClass" />
      <xs:enumeration value="means.pii.address" />
      <xs:enumeration value="means.pii.email" />
      <xs:enumeration value="means.pii.employeeNumber" />
      <xs:enumeration value="means.pii.name" />
      <xs:enumeration value="means.pii.other" />
      <xs:enumeration value="means.pii.ssn" />
      <xs:enumeration value="means.pii.zip" />
      <xs:enumeration value="privacy.dataIdentifiability.aggregated" />
      <xs:enumeration value="privacy.dataIdentifiability.anonymized" />
      <xs:enumeration value="privacy.dataIdentifiability.identified" />
      <xs:enumeration value="privacy.dataIdentifiability.pseudonymized" />
      <xs:enumeration value="privacy.dataUsage.improve" />
      <xs:enumeration value="privacy.dataUsage.research" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Data.Tabular.TableToTableMappingCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av tabellmappning mellan en källa och en destination som används vid datainläsning.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="tableToTableMapping" type="Data.Tabular.TableToTableMapping" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Data.IngestPolicy">
    <xs:annotation>
      <xs:documentation>Sets rules that controls the behaviour of the ingestStore data stage.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="ingestStoreDataStageTables" type="Data.Tabular.IngestStoreDataStageTableCollection" minOccurs="0" maxOccurs="1" />
    </xs:all>
    <xs:attribute name="loadType" type="Data.LoadType" use="required"></xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.LogicDataStageTableCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av logicDataStageTable som beskriver hur tabeller ska transformeras.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="logicDataStageTable" type="Data.Tabular.LogicDataStageTable" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="Data.DataStageMaterialization">
    <xs:annotation>
      <xs:documentation>Anger om data ska materialiseras eller virtualiseras.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ingest" />
      <xs:enumeration value="table" />
      <xs:enumeration value="validate" />
      <xs:enumeration value="view" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Data.DataStageRole">
    <xs:annotation>
      <xs:documentation>Anger vad som sker i dataStage.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="control" />
      <xs:enumeration value="input" />
      <xs:enumeration value="none" />
      <xs:enumeration value="output" />
      <xs:enumeration value="transformation" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Data.DataStageType">
    <xs:annotation>
      <xs:documentation>Anger vilken typ av dataStage .</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="basicLogic" />
      <xs:enumeration value="hash" />
      <xs:enumeration value="ingestStore" />
      <xs:enumeration value="logic" />
      <xs:enumeration value="permaStore" />
      <xs:enumeration value="tempStore" />
      <xs:enumeration value="typecast" />
      <xs:enumeration value="validate" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Data.ValidationPolicy">
    <xs:annotation>
      <xs:documentation>TODO</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="businessKeyDuplicate" type="Data.ValidationPolicies.BusinessKeyDuplicatePolicy" minOccurs="0" maxOccurs="1" />
      <xs:element name="businessKeyNull" type="Data.ValidationPolicies.BusinessKeyNullPolicy" minOccurs="0" maxOccurs="1" />
      <xs:element name="qualityValidation" type="Data.ValidationPolicies.QualityValidationPolicy" minOccurs="0" maxOccurs="1" />
      <xs:element name="validateDataStageTables" type="Data.Tabular.ValidateDataStageTableCollection" minOccurs="0" maxOccurs="1" />
    </xs:all>
  </xs:complexType>
  <xs:simpleType name="Data.Outputs.Api.ApiOutputType">
    <xs:annotation>
      <xs:documentation>Anger utdatatyper som är kompatibla med apiOutput.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="odata" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Data.Outputs.File.FileFormat">
    <xs:annotation>
      <xs:documentation>Anger kompatibla filformat.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="csv" />
      <xs:enumeration value="custom" />
      <xs:enumeration value="parquet" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Data.Outputs.Sql.SqlOutputType">
    <xs:annotation>
      <xs:documentation>Anger utdatatyper som är kompatibla med sqlOutput.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="sparksql" />
      <xs:enumeration value="tsql" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Data.Tabular.BusinessKey">
    <xs:restriction base="xs:string" />
  </xs:simpleType>
  <xs:complexType name="Data.Tabular.DataProductColumn">
    <xs:annotation>
      <xs:documentation>Beskriver en kolumn i en tabulär dataprodukt.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="columnInstances" type="Core.Columns.ColumnInstanceCollection" minOccurs="0" maxOccurs="1" />
      <xs:element name="descriptions" type="Core.Descriptions.DescriptionCollection" minOccurs="0" maxOccurs="1" />
      <xs:element name="dimlDataType" type="Core.DataTypesConfig.DimlDataType" minOccurs="0" maxOccurs="1" />
      <xs:element name="names" type="Core.Names.NameCollection" minOccurs="0" maxOccurs="1" />
      <xs:element name="traits" type="Core.Traits.TraitCollection" minOccurs="0" maxOccurs="1" />
    </xs:all>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Kolumnens id.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.SampleDataRow">
    <xs:annotation>
      <xs:documentation>Anger exempeldata.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.TableInstance">
    <xs:annotation>
      <xs:documentation>Anger en instans av en tabell i en tabulär dataprodukt.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="alias" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Anger tabellens alias för ett eller flera dataStages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromStageId" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger från och med vilket dataStage som tabellen ska byta namn i. Om inget anges gäller dataStage med order="1".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="toStageId" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger till och med vilket dataStage som tabellen ska byta namn i. Om inget anges gäller dataStage med order="X", där X = högsta order.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.TableRelation">
    <xs:annotation>
      <xs:documentation>Anger eventuella tabellrelationer och hur de relaterar via relationsColumns.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="relationColumns" type="Data.Tabular.RelationColumns" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Ett unikt id för tabellrelationen.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="targetTableId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Anger vilken tabell som tabellrelationen relaterar till.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.TableToTableMapping">
    <xs:annotation>
      <xs:documentation>En tabellmappning mellan en källa och en destination som används vid datainläsning.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="columnMappings" type="Data.Tabular.ColumnMappingCollection" minOccurs="0" maxOccurs="1" />
    </xs:all>
    <xs:attribute name="allowSchemaDrift" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>TODO</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sourceTableId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Tabellens id i källan.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="tableId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Tabellens id i destinationen.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.IngestStoreDataStageTableCollection">
    <xs:sequence>
      <xs:element name="ingestStoreDataStageTable" type="Data.Tabular.IngestStoreDataStageTable" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="Data.LoadType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="changeTracking" />
      <xs:enumeration value="full" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Data.Tabular.LogicDataStageTable">
    <xs:annotation>
      <xs:documentation>Beskriver hur tabeller ska transformeras.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="logicColumnMappings" type="Data.Tabular.LogicColumnMappingCollection" minOccurs="0" maxOccurs="1" />
    </xs:all>
    <xs:attribute name="filterSqlExpression" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger om tabellrader ska filtreras.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="tableId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Anger tabellid på tabell vars värden ska transformeras.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="trim" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>Anger om tabellens kolumnvärden ska trimmas om inte en specifik kolumn trim anges.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.ValidationPolicies.BusinessKeyDuplicatePolicy">
    <xs:annotation>
      <xs:documentation>Defines the policy for handling duplicate business keys.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="action" type="Data.ValidationPolicies.BusinessKeyDuplicateAction" use="required">
      <xs:annotation>
        <xs:documentation>Defines the action to be taken for handling duplicate BusinessKeys.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="rowNoOrderBy" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Specifies the sorting expression applied to the table for duplicate removal.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.ValidationPolicies.BusinessKeyNullPolicy">
    <xs:annotation>
      <xs:documentation>Defines the policy for handling business keys with null values.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="defaultValues" type="Data.ValidationPolicies.DefaultValueCollection" minOccurs="0" maxOccurs="1" />
    </xs:all>
    <xs:attribute name="action" type="Data.ValidationPolicies.BusinessKeyNullAction" use="required">
      <xs:annotation>
        <xs:documentation>Defines the action to be taken for handling null values in the BusinessKey.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.ValidationPolicies.QualityValidationPolicy">
    <xs:annotation>
      <xs:documentation>Defines the policy for handling when something is not valid.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="action" type="Data.ValidationPolicies.QualityValidationAction" use="required">
      <xs:annotation>
        <xs:documentation>Defines the action to be taken for quality validation.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.ValidateDataStageTableCollection">
    <xs:sequence>
      <xs:element name="validateDataStageTable" type="Data.Tabular.ValidateDataStageTable" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Core.Columns.ColumnInstanceCollection">
    <xs:annotation>
      <xs:documentation>En samling av kolumninstanser i en tabulär dataprodukt.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="columnInstance" type="Core.Columns.ColumnInstance" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="existsFromStageId" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger från och med vilket dataStage som kolumnen ska existera i. Om inget anges gäller dataStage med order="1".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="existsToStageId" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger till och med vilket dataStage som kolumnen ska existera i. Om inget anges gäller dataStage med order="X", där X = högsta order.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Core.DataTypesConfig.DimlDataType">
    <xs:annotation>
      <xs:documentation>Anger en Diml-datatyp baserat på dom typer som finns definierade i datatypsspecifikationen.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="bits" type="xs:int" use="optional">
      <xs:annotation>
        <xs:documentation>Anger antalet bitar som används för att lagra heltal.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="format" type="Core.DataTypesConfig.DimlDataTypeFormat" use="optional">
      <xs:annotation>
        <xs:documentation>Anger formatet på datan. T.ex. Xml eller Json.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="id" type="Core.DataTypesConfig.DimlDataTypes" use="required">
      <xs:annotation>
        <xs:documentation>Anger datatypens typ. T.ex. String eller Integer.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="isFixedLength" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>Anger ifall t.ex. en sträng har en fixerad längd och alltid tar upp lika mycket plats.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="isNullable" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>Anger ifall datatypen kan vara null eller ej.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="isUnsigned" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>Anger ifall datatypen enbart kan innehålla positiva heltal.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="isWideChar" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>Anger ifall datatypen är en widechar is SQL.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="length" type="xs:int" use="optional">
      <xs:annotation>
        <xs:documentation>Anger maxlängden på t.ex. en sträng.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="mantissa" type="xs:int" use="optional">
      <xs:annotation>
        <xs:documentation>Anger antalet bitar som används för att lagra mantissan för flyttal.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="originalDataType" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger källsystemets datatyp.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="originalPlatform" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger typen av källsystem som datatypen härstammar från.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="precision" type="xs:int" use="optional">
      <xs:annotation>
        <xs:documentation>Anger precisionen för tid och decimaltal.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="scale" type="xs:int" use="optional">
      <xs:annotation>
        <xs:documentation>Anger skalan för decimaltal.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.RelationColumns">
    <xs:annotation>
      <xs:documentation>Anger med vilka kolumner en tabell relaterar till en annan.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="columnName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Anger relationkolumnens namn i källtabellen.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="targetColumnName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Anger relationkolumnens namn i den relaterade tabellen.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.ColumnMappingCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av ColumnMapping som är en kolumnmappning mellan en källa och en destination som används vid datainläsning.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="columnMapping" type="Data.Tabular.ColumnMapping" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.IngestStoreDataStageTable">
    <xs:attribute name="loadType" type="Data.LoadType" use="required">
      <xs:annotation>
        <xs:documentation>Sets how the data should be loaded for a given table, e.g. 'full' or 'changeTracking'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="tableId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>A unique identifier that references a specific table.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.LogicColumnMappingCollection">
    <xs:annotation>
      <xs:documentation>Innehåller en lista av logicColumnMapping som beskriver hur kolumner ska transformeras.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="logicColumnMapping" type="Data.Tabular.LogicColumnMapping" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="Data.ValidationPolicies.BusinessKeyDuplicateAction">
    <xs:annotation>
      <xs:documentation>Actions for business key duplicate policy</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="eliminate" />
      <xs:enumeration value="flag" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Data.ValidationPolicies.BusinessKeyNullAction">
    <xs:annotation>
      <xs:documentation>Actions for business key null policy</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="flag" />
      <xs:enumeration value="setDefaultValue" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Data.ValidationPolicies.DefaultValueCollection">
    <xs:sequence>
      <xs:element name="defaultValue" type="Data.ValidationPolicies.DefaultValue" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="Data.ValidationPolicies.QualityValidationAction">
    <xs:annotation>
      <xs:documentation>Actions for quality validation policy</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="eliminateOnly" />
      <xs:enumeration value="filterValid" />
      <xs:enumeration value="ignoreValid" />
      <xs:enumeration value="stop" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Data.Tabular.ValidateDataStageTable">
    <xs:all>
      <xs:element name="businessKeyDuplicate" type="Data.ValidationPolicies.BusinessKeyDuplicatePolicy" minOccurs="0" maxOccurs="1" />
      <xs:element name="businessKeyNull" type="Data.ValidationPolicies.BusinessKeyNullPolicy" minOccurs="0" maxOccurs="1" />
      <xs:element name="qualityValidation" type="Data.ValidationPolicies.QualityValidationPolicy" minOccurs="0" maxOccurs="1" />
    </xs:all>
    <xs:attribute name="tableId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>A unique identifier that references a specific table.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Core.Columns.ColumnInstance">
    <xs:annotation>
      <xs:documentation>Anger en instans av en kolumn i en tabulär dataprodukt.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="dimlDataType" type="Core.DataTypesConfig.DimlDataType" minOccurs="0" maxOccurs="1" />
    </xs:all>
    <xs:attribute name="alias" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Anger kolumnens alias för ett eller flera dataStages.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fromStageId" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger från och med vilket dataStage som kolumnen ska byta namn och/eller datatyp i. Om inget anges gäller dataStage med order="1".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="toStageId" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger till och med vilket dataStage som kolumnen ska byta namn och/eller datatyp i. Om inget anges gäller dataStage med order="X", där X = högsta order.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="Core.DataTypesConfig.DimlDataTypeFormat">
    <xs:restriction base="xs:string">
      <xs:enumeration value="json" />
      <xs:enumeration value="xml" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Core.DataTypesConfig.DimlDataTypes">
    <xs:restriction base="xs:string">
      <xs:enumeration value="binary" />
      <xs:enumeration value="boolean" />
      <xs:enumeration value="date" />
      <xs:enumeration value="dateTime" />
      <xs:enumeration value="dateTimeOffset" />
      <xs:enumeration value="decimal" />
      <xs:enumeration value="float" />
      <xs:enumeration value="guid" />
      <xs:enumeration value="integer" />
      <xs:enumeration value="string" />
      <xs:enumeration value="time" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Data.Tabular.ColumnMapping">
    <xs:annotation>
      <xs:documentation>En kolumnmappning mellan en källa och en destination som används vid datainläsning.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="columnId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Kolumnens id i destinationen.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sourceColumnId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Kolumnens id i källan.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.Tabular.LogicColumnMapping">
    <xs:annotation>
      <xs:documentation>Beskriver hur kolumner ska transformeras.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="columnId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Anger kolumnid i tabellen.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="customSqlExpression" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Anger ett SQL-uttryck för transformeringen.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="trim" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>Anger om kolumnens värden ska trimmas.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Data.ValidationPolicies.DefaultValue">
    <xs:annotation>
      <xs:documentation>Defines a default value for a column.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="columnId" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>A unique identifier that references a specific column within a table.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Specifies the default value assigned to the referenced column.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
</xs:schema>